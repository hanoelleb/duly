{"version":3,"sources":["components/Home.js","reducers/auth-reducer.js","components/SignIn.js","reducers/notes-reducer.js","components/Notes.js","components/SignUp.js","App.js","serviceWorker.js","index.js","notebook.module.css"],"names":["Home","className","styles","home","initialState","user","token","localStorage","getItem","authReducer","state","action","type","SignIn","props","useState","username","setUsername","password","setPassword","redirect","setRedirect","dispatch","useDispatch","authform","onSubmit","e","preventDefault","data","fetch","method","headers","body","JSON","stringify","then","response","json","res","setItem","placeholder","name","value","onChange","target","formlink","to","count","index","topic","content","id","notesReducer","concat","console","log","slice","length","filter","note","NoteForm","handleEditorChange","editor","setState","handleChange","bind","handleSubmit","handleClick","toggle","this","_id","addNote","val","notebutton","onClick","noteform","initialValue","init","height","width","menubar","plugins","toolbar","onEditorChange","React","Component","NoteList","renderNote","url","notes","forEach","ConnectedNote","notelist","map","Note","handleRemove","removeNote","editNote","ReactHtmlParser","buttons","mapStateToProps","auth","mapDispatchToProps","ConnectedForm","connect","ConnectedNoteList","Notes","SignUp","confirmation","setConfirmation","disabled","Notenav","useSelector","navbar","logo","App","exact","path","Boolean","window","location","hostname","match","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.25b259e8.chunk.js","sourcesContent":["import React from 'react';\nimport styles from '../notebook.module.css';\n\nconst Home = () => {\n    return (\n\t<div className={styles.home}>\n            <h2>Duly</h2>\n\t    <h3>Welcome!</h3>\n\t    <p>Duly is a place to store all your notes!</p>\n        \n\t    <p>Whether just simple reminders for yourself or \n\t    material for group study sessions, Duly can store it all.</p>\n\n            <p>Create an account to save your notes!</p>\n\n\t    <p>Make your own notebooks now!</p>\n\t</div>\n    )\n}\n\nexport default Home;\n","const initialState = [\n  { \n    user: null,\n    token: localStorage.getItem('token'),\n  }\n] \n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case 'LOGIN':\n      return { user: action.user, token: action.token }\n    case 'LOGOUT':\n      return { user: null, token: '' }\n    default: // if none of the above matches, code comes here\n    return state\n  }\n}\n\nexport const login = (user, token) => {\n  return {\n    type: 'LOGIN',\n    user: user,\n    token: token\n  }\n}\n\nexport const logout = () => {\n  return {\n     type: 'LOGOUT'\n  }\n}\n\nexport default authReducer;\n\n","import styles from '../notebook.module.css';\n\nimport React, {useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\n\nimport { login } from '../reducers/auth-reducer';\nimport { useDispatch } from 'react-redux';\n\nconst SignIn = (props) => {\n     \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const dispatch = useDispatch();\n\n    function handleName(e) {\n        setUsername(e.target.value);\n    }\n\n    function handlePassword(e) {\n        setPassword(e.target.value);\n    }\n\n    function handleSubmit(e) {\n\te.preventDefault();\n        var data = {\n\t    username: username,\n            password: password\n\t};\n        \n\tvar url = 'https://hanoelleb-notebook-api.herokuapp.com/sign-in';\n\tconst response =\n            fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)})\n                .then(response => response.json())\n                .then( res => {\n\t\t    localStorage.setItem('token', res.token);\n\t\t    dispatch(login(res.user, res.token));\n                    setRedirect(true);\n                });\n    }\n\n    \n    if (redirect !== true) {\n    return (\n\t<div>\n        <form className={styles.authform} onSubmit={handleSubmit}>\n\t    <h2>Sign in</h2>\n\t    <input type='text' placeholder='Username' name='username' \n\t        value = {username} onChange={handleName} />\n\t    <input type='password' placeholder='Password' name='password' \n\t        value = {password} onChange={handlePassword} />\n\t    <input type='submit' value='Sign in' />\n\t</form>\n\t<p className={styles.formlink}>Not a registered user? \n\t    <Link to='/sign-up'> Sign up!</Link></p>\n\t</div>\n      )\n    }\n    return <Redirect to='/notes' />\n}\n\nexport default SignIn;\n","var count = 0;\n\nconst initialState = [\n  {\n    index: count,\n    topic: 'Hello, world!',\n    content: 'Create your own notes!',\n    id: 1\n  }\n]\n\ncount++;\n\nconst notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case 'ADD':\n      return state.concat(action.data);\n    case 'EDIT':\n      if (action.data.index == 0) {\n\t  console.log(\"here\");\n          return ((state.slice(state.length))\n\t\t    .concat(action.data))\n                    .concat(state.slice(1))\n      }\n      return (((state.slice(state.length))\n\t         .concat(state.slice(0, action.data.index)))\n\t         .concat(action.data))\n\t\t .concat(state.slice(action.data.index+1));\n    case 'REMOVE':\n      return state.filter(note => note.index != action.index);\n    default: // if none of the above matches, code comes here\n    return state\n  }\n}\n\nexport const addNote = (note) => {\n  var id;\n  if (note._id) \n      id = note._id;\n  else\n      id = count+1;\n  return {\n      type: 'ADD', \n      data: {\n          index: count++,\n          topic: note.topic,\n\t  content: note.content,\n\t  id: note._id\n      }\n  }\n}\n\nexport const removeNote = (note) => {\n   return {\n     type: 'REMOVE',\n     index: note.index\n   }\n}\n\nexport const editNote = (note) => {\n   return {\n      type: 'EDIT',\n      data: {\n          index: note.index,\n\t  topic: note.topic,\n\t  content: note.content,\n\t  id: note.id\n      }\n   }\n}\n\nexport default notesReducer;\n","import styles from '../notebook.module.css';\n\nimport React, {useState} from 'react';\nimport {Editor} from '@tinymce/tinymce-react';\nimport { connect } from 'react-redux';\nimport ReactHtmlParser from 'react-html-parser';\n\nimport { addNote, editNote, removeNote } from '../reducers/notes-reducer';\n\nconst Notes = () => {\n    return (\n    <div>\n        <h2>Notes</h2>\n\t<ConnectedForm />\n\t<ConnectedNoteList />\n    </div>\n    )\n}\n\nclass NoteForm extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleEditorChange = this.handleEditorChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis.handleClick = this.handleClick.bind(this);\n\tthis.state = ({topic: '', content: '', toggle: false});\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name] : e.target.value });\n    }\n\n    handleEditorChange = (content, editor) => {\n\t this.setState( { content: content } );\n    }\n\n    handleSubmit(e) {\n\te.preventDefault();\n\n        const data = { topic: this.state.topic, content: this.state.content };\n\n\tif (this.props.user) {\n\t    const id = this.props.user._id;\n\t    const token = this.props.token;\n\t    const url = 'https://hanoelleb-notebook-api.herokuapp.com/'+id+'/notes/add';\n\n\t    fetch(url, {\n\t        method: 'POST',\n\t\theaders: {\n\t\t   'Authorization': this.props.token,\n                   'Accept': 'application/json',\n                   'Content-Type': 'application/json'   \n\t\t},\n\t\tbody: JSON.stringify(data)\n\t    }).then( response => response.json() )\n              .then( data => {\n\t          console.log(data.note);\n\t\t  this.props.addNote(data.note);\n\t          this.setState({topic: '', content: '', toggle: false});\n\t      })\n\t} else {\n\t    this.props.addNote( data );\n            this.setState({topic: '', content: '', toggle: false});\n\t}\n    }\n\n    handleClick() {\n\tvar val = !this.state.toggle;\n        this.setState({ toggle: val });\n    }\n\n    render() {\n\tif (this.state.toggle) {\n\t    return (\n            <div>\n                <button className={styles.notebutton} \n\t\t    onClick={this.handleClick}>Cancel</button>\n\n                <form className={styles.noteform} onSubmit={this.handleSubmit}>\n                    <input type='text' placeholder='Topic' name='topic'\n                        value={this.state.topic} onChange={this.handleChange}\n                    />\n\t\t    <Editor name='content'\n                        initialValue=\"<p>Your notes...</p>\"\n\t\t        value = {this.state.content}\n                        init={{\n                            height: 250,\n\t                    width: 500,\n                            menubar: false,\n                            plugins: [\n             'advlist autolink lists link image charmap print preview anchor',\n             'searchreplace visualblocks code fullscreen',\n             'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                      'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help'\n                       }}\n                       onEditorChange={this.handleEditorChange}\n                    />\n\t\t    <input className={styles.notebutton} \n\t\t    type='submit' value='Add note'></input>\n                </form>\n            </div>\n\t    )\n\t}\n        return (\n\t    <div>\n\t\t<button className={styles.notebutton} \n\t\tonClick={this.handleClick}>+Note</button>\n            </div>\n\t)\n    }\n}\n\nclass NoteList extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.renderNote = this.renderNote.bind(this);\n    }\n\n    componentDidMount() {\n\tif (this.props.user) {\n\tconst url = 'https://hanoelleb-notebook-api.herokuapp.com/' + this.props.user._id + '/notes';\n        console.log(url);\n            fetch(url, {\n\t        headers: {\n                   'Authorization': this.props.token,\n                   'Accept': 'application/json',\n                   'Content-Type': 'application/json'\n                },\n\t    }).then(response => response.json())\n\t\t.then( data => {\n\t\t    var notes = data.notes;\n                    notes.forEach(note => this.props.addNote(note));\n\t\t});\n\t}\n    }\n\n    renderNote(note) {\n        return (\n             < ConnectedNote note={note} />\n\t)\n    }\n\n    render() {\n        return (\n\t    <div className={styles.notelist}>\n                <h2>Your notes!</h2>\n\t        {this.props.notes.map(note => this.renderNote(note) ) }\n            </div>\n\t)\n    }\n}\n\nclass Note extends React.Component {\n   \n    constructor(props) {\n        super(props);\n\tthis.handleChange = this.handleChange.bind(this);\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\tthis.handleRemove = this.handleRemove.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n\tthis.state = ({topic: '', content: '', toggle: false});\n    }\n\n    componentDidMount() {\n        this.setState({topic: this.props.note.topic, \n\t\tcontent: this.props.note.content});\n    }\n    \n    handleChange(e) {\n        this.setState({ [e.target.name] : e.target.value });\n    }\n\n    handleEditorChange = (content, editor) => {\n         this.setState( { content: content } );\n    }\n\n    handleRemove() {\n\tconst data = { id : this.props.note.id };  \n\tthis.props.removeNote(this.props.note);\n        if (this.props.user) {\n\t    const id = this.props.user._id;\n            const token = this.props.token;\n            const url = 'https://hanoelleb-notebook-api.herokuapp.com/'+id+'/notes/remove';\n\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                   'Authorization': this.props.token,\n                   'Accept': 'application/json',\n                   'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            }).then( response => response.json())\n\t}\n\tthis.setState({topic: this.props.note.topic,\n                       content: this.props.note.content});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const data = { id: this.props.note.id, \n\t\tindex: this.props.note.index,\n\t\ttopic: this.state.topic, \n\t        content: this.state.content };\n        \n        if (this.props.user) {\n            const id = this.props.user._id;\n            const token = this.props.token;\n            const url = 'https://hanoelleb-notebook-api.herokuapp.com/'+id+'/notes/update';\n\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                   'Authorization': this.props.token,\n                   'Accept': 'application/json',\n                   'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            }).then( response => response.json() )\n              .then( data => {\n\t\t  data.note.index = this.props.note.index;\n\t\t  this.props.editNote(data.note);\n\t\t  this.setState({toggle: false});\n              })\n        } else {\n            this.props.editNote( data );\n            this.setState({toggle: false});\n        }\n    }\n\n    handleClick() {\n        var val = !this.state.toggle;\n        this.setState({ topic: this.props.note.topic,\n                       content: this.props.note.content, \n\t\ttoggle: val });\n    }\n\n\n    render() { \n        return (\n        <div className={styles.note}>\n            <h3>{this.props.note.topic}</h3>\n            {ReactHtmlParser(this.props.note.content)}\n\t\n            <div className={styles.buttons}>\n            <button onClick={this.handleClick}>\n\t\t{ this.state.toggle ? 'Cancel' : 'Edit' }\n            </button>\n            <button onClick={this.handleRemove}>\n\t\tDelete\n            </button>\n            </div>\n\n\t    { this.state.toggle ?\n                <form onSubmit={this.handleSubmit}>\n                    <input type='text' placeholder='Topic' name='topic'\n                        value={this.state.topic} onChange={this.handleChange}\n                    />\n                    <Editor name='content'\n                        initialValue=\"<p>Your notes...</p>\"\n                        value = {this.state.content}\n                        init={{\n                            height: 250,\n                            width: 500,\n                            menubar: false,\n                            plugins: [\n             'advlist autolink lists link image charmap print preview anchor',\n             'searchreplace visualblocks code fullscreen',\n             'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                      'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help'\n                       }}\n                       onEditorChange={this.handleEditorChange}\n                    />\n                    <input type='submit' value='Update'></input>\n                </form>\n\n                : ''\n\t    }\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    token: state.auth.token,\n    notes: state.notes,\n  }\n}\n\nconst mapDispatchToProps = { addNote, editNote, removeNote }\nconst ConnectedForm = connect(mapStateToProps, mapDispatchToProps)(NoteForm)\nconst ConnectedNoteList = connect(mapStateToProps, mapDispatchToProps)(NoteList)\nconst ConnectedNote = connect(mapStateToProps, mapDispatchToProps)(Note)\n\nexport default Notes;\n","import React, {useState} from 'react';\nimport styles from '../notebook.module.css';\n\nimport {Link, Redirect} from 'react-router-dom';\n\nconst SignUp = () => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmation, setConfirmation] = useState('');\n    const [ready, setReady] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n\n    function handleName(e) {\n        setUsername(e.target.value);\n    }\n\n    function handlePassword(e) {\n        setPassword(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        var url = 'https://hanoelleb-notebook-api.herokuapp.com/sign-up';\n\n        var data = { username: username, password: password };\n\tconsole.log('data: ' + data);\n\n\tfetch(url, {\n\t    method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\t    body: JSON.stringify(data) })\n                .then(response => response.json())\n                .then( data => {\n                    setRedirect(true);\n                });\n    }\n\n    function handleConfirmation(e) {\n        setConfirmation(e.target.value);\n    }\n\n    if (!redirect)\n    return (\n\t<div>\n        <form className={styles.authform} onSubmit={handleSubmit}>\n            <h2>Sign up</h2>\n            <input type='text' placeholder='Username' name='username'\n                value = {username} onChange={handleName} />\n            <input type='password' placeholder='Password' name='password'\n                value = {password} onChange={handlePassword} />\n\t    <input type='password' placeholder='Confirm Password' \n\t        name='confirmation' onChange={handleConfirmation} />\n\t    { username !== '' && \n\t      password !== '' && \n\t      password === confirmation ?\n                  <input type='submit' value='Sign up' /> \n\t\t  :\n\t\t  <input type='submit' value='Sign up' disabled />\n\t    }\n        </form>\n\t    <p className={styles.formlink}>Already have an account?\n                <Link to='/sign-in'> Sign in!</Link>\n            </p>\n\t</div>\n    )\n    return <Redirect to='/sign-in' />\n}\n\nexport default SignUp;\n","import React, {useState} from 'react';\nimport styles from './notebook.module.css';\nimport './App.css';\n\nimport Home from './components/Home.js';\nimport SignIn from './components/SignIn.js';\nimport Notes from './components/Notes.js';\nimport SignUp from './components/SignUp.js';\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {logout} from './reducers/auth-reducer';\n\nconst Notenav = (props) => {\n\n    const user = useSelector(state => state.auth.user)\n    const dispatch = useDispatch()\n\n    return (\n    <div className={styles.navbar}>\n        <ul>\n\t    <li className={styles.logo}>Duly</li>\n            <li><Link to='/'>Home</Link></li>\n            <li><Link to='/notes'>Notebooks</Link></li>\n\t    { user ?\n                <li onClick={()=> dispatch(logout())}>Sign out</li> :\n                <li>\n\t\t    <Link to='/sign-in'>Sign in</Link>\n\t\t</li>\n\t    }\n        </ul>\n    </div>\n    );\n}\n\n\nfunction App() {\n  \n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n\n  return (\n    <div>\n\t<Router>\n\t   <Notenav />\n\t   <Switch>\n\t       <Route exact path='/'>\n\t           <Home />\n\t       </Route>\n\n\t       <Route path='/notes'>\n                   <Notes />\n               </Route>\n\n\t       <Route path='/sign-in'>\n                   <SignIn />\n               </Route>\n\n\t       <Route path='/sign-up'>\n\t           <SignUp />\n\t       </Route>\n\t   </Switch>\n\t</Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux' \n\nimport notesReducer from './reducers/notes-reducer';\nimport authReducer from './reducers/auth-reducer';\n\nconst reducer = combineReducers({  notes: notesReducer,  auth: authReducer})\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"notebook_navbar__2a7QK\",\"logo\":\"notebook_logo__1i_ek\",\"home\":\"notebook_home__2934l\",\"note\":\"notebook_note__111vZ\",\"buttons\":\"notebook_buttons__hqOkJ\",\"notebutton\":\"notebook_notebutton__2aSJs\",\"notelist\":\"notebook_notelist__1u8uu\",\"noteform\":\"notebook_noteform__29yhs\",\"authform\":\"notebook_authform__2ii_W\",\"formlink\":\"notebook_formlink__a1gGa\"};"],"sourceRoot":""}